{{define "stripe-js"}}
<script src="https://js.stripe.com/v3/"></script>
<script>
    let card;

    const stripe = Stripe({{index .StringMap "publishable_key"}});
    const cardMessages = document.getElementById("card-messages");
    const payButton = document.getElementById("pay-button");
    const processing = document.getElementById("processing-payment");

    function hidePayButton() {
        payButton.classList.add("d-none");
        processing.classList.remove("d-none");
    }

    function showPayButtons() {
        payButton.classList.remove("d-none");
        processing.classList.add("d-none");
    }

    function showCardError(message) {
        cardMessages.classList.add("alert-danger");
        cardMessages.classList.remove("alert-success");
        cardMessages.classList.remove("d-none");
        cardMessages.innerText = message;
    }

    function showCardSuccess() {
        cardMessages.classList.remove("alert-danger");
        cardMessages.classList.add("alert-success");
        cardMessages.classList.remove("d-none");
        cardMessages.innerText = "Transaction successful";
    }

    function val() {
        const form = document.getElementById("charge_form");
        if (form.checkValidity() === false) {
            this.event.preventDefault();
            this.event.stopPropagation();
            form.classList.add("was-validated");
            return;
        }

        form.classList.add("was-validated");
        hidePayButton();

        const amountToCharge = String(parseFloat(document.getElementById("amount").value) * 100)
        
        const payload = {
            amount: amountToCharge,
            currency: "USD"
        };
        const requestOptions = {
            method: "post",
            headers: {
                "Accept": "application/json",
                "Content-Type": "application/json"
            },
            body: JSON.stringify(payload)
        };

        fetch("{{.API}}/api/payment-intent", requestOptions)
            .then((resp) => resp.text())
            .then((resp) => {
                let data;
                try {
                    data = JSON.parse(resp);
                    stripe.confirmCardPayment(data.client_secret, {
                        payment_method: {
                            card: card,
                            billing_details: {
                                name: document.getElementById("cardholder-name").value,
                            }
                        }
                    }).then(function(result) {
                        if (result.error) {
                            showCardError(result.error.message);
                            showPayButtons();
                        } else if (result.paymentIntent) {
                            if (result.paymentIntent.status === "succeeded") {
                                document.getElementById("payment_method").value = result.paymentIntent.payment_method_types[0];
                                document.getElementById("payment_intent").value = result.paymentIntent.id;
                                document.getElementById("payment_amount").value = result.paymentIntent.amount;
                                document.getElementById("payment_currency").value = result.paymentIntent.currency;

                                processing.classList.add("d-none");
                                showCardSuccess();
                                form.submit();
                            }
                        }
                    })
                } catch (error) {
                    showCardError("Invalid response from payment gateway");
                    showPayButtons();
                }
            });
    }

    (function() {
        const elements = stripe.elements();
        const style = {
            base: {
                fontSize: "16px",
                lineHeight: "24px",
            }
        };

        card = elements.create("card", {
            style: style,
            hidePostalCode: true
        })

        card.mount("#card-element");

        card.addEventListener("change", function(event) {
            var displayError = document.getElementById("card-errors")

            if (event.error) {
                displayError.classList.remove("d-none");
                displayError.textContent = event.error.message;
            } else {
                displayError.classList.add("d-none");
                displayError.textContent = "";
            }
        })
    })()
</script>
{{end}}